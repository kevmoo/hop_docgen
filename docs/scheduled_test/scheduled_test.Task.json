{"name":"Task","qualifiedName":"scheduled_test/scheduled_test.Task","comment":"<p>A single task to be run as part of a <a>scheduled_test/scheduled_test.TaskQueue</a>.</p>\n<p>There are two levels of tasks. <strong>Top-level tasks</strong> are created by calling\n<a>scheduled_test/scheduled_test.TaskQueue.schedule</a> before the queue in question is running. They're run in\nsequence as part of that <a>scheduled_test/scheduled_test.TaskQueue</a>. <strong>Nested tasks</strong> are created by\ncalling <a>scheduled_test/scheduled_test.TaskQueue.schedule</a> once the queue is already running, and are run\nin parallel as part of a top-level task.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"description":{"name":"description","qualifiedName":"scheduled_test/scheduled_test.Task.description","comment":"<p>A description of this task. Used for debugging. May be <code>null</code>.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"fn":{"name":"fn","qualifiedName":"scheduled_test/scheduled_test.Task.fn","comment":"<p>The body of the task.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"scheduled_test/scheduled_test.TaskBody","inner":[]}],"annotations":[]},"parent":{"name":"parent","qualifiedName":"scheduled_test/scheduled_test.Task.parent","comment":"<p>The parent task, if this is a nested task that was started while another\ntask was running. This will be <code>null</code> for top-level tasks.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"scheduled_test/scheduled_test.Task","inner":[]}],"annotations":[]},"queue":{"name":"queue","qualifiedName":"scheduled_test/scheduled_test.Task.queue","comment":"<p>The queue to which this <a>scheduled_test/scheduled_test.Task</a> belongs.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"scheduled_test/scheduled_test.TaskQueue","inner":[]}],"annotations":[]},"stackChain":{"name":"stackChain","qualifiedName":"scheduled_test/scheduled_test.Task.stackChain","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"stack_trace-chain.Chain","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"children":{"name":"children","qualifiedName":"scheduled_test/scheduled_test.Task.children","comment":"<p>Child tasks that have been spawned while running this task. This will be\nempty if this task is a nested task.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"scheduled_test/scheduled_test.Task","inner":[]}]}],"parameters":{},"annotations":[]},"result":{"name":"result","qualifiedName":"scheduled_test/scheduled_test.Task.result","comment":"<p>A Future that will complete to the return value of <a>scheduled_test/scheduled_test.Task.fn</a> once this task\nfinishes running.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{},"annotations":[]},"state":{"name":"state","qualifiedName":"scheduled_test/scheduled_test.Task.state","comment":"<p>The current state of this.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test.TaskState","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"scheduled_test/scheduled_test.Task.Task-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"fn":{"name":"fn","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{}}},"description":{"name":"description","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"queue":{"name":"queue","optional":false,"named":false,"default":false,"type":[{"outer":"scheduled_test/scheduled_test.TaskQueue","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"generateTree":{"name":"generateTree","qualifiedName":"scheduled_test/scheduled_test.Task.generateTree","comment":"<p>Returns a detailed representation of <a>scheduled_test/scheduled_test.Task.queue</a> with this task highlighted.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"runChild":{"name":"runChild","qualifiedName":"scheduled_test/scheduled_test.Task.runChild","comment":"<p>Run <a>scheduled_test/scheduled_test.Task.runChild.fn</a> as a child of this task. Returns a Future that will complete with\nthe result of the child task. This task will not complete until <a>scheduled_test/scheduled_test.Task.runChild.fn</a> has\nfinished.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"fn":{"name":"fn","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{}}},"description":{"name":"description","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"scheduled_test/scheduled_test.Task.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"toStringWithStackTrace":{"name":"toStringWithStackTrace","qualifiedName":"scheduled_test/scheduled_test.Task.toStringWithStackTrace","comment":"","commentFrom":"scheduled_test.Task.toStringWithStackTrace","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"scheduled_test/scheduled_test.Task.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>scheduled_test/scheduled_test.Task.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"scheduled_test/scheduled_test.Task.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"scheduled_test/scheduled_test.Task.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>scheduled_test/scheduled_test.Task.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>scheduled_test/scheduled_test.Task.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"scheduled_test/scheduled_test.Task.noSuchMethod","comment":"<p><a>scheduled_test/scheduled_test.Task.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>scheduled_test/scheduled_test.Task.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>scheduled_test/scheduled_test.Task.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>scheduled_test/scheduled_test.Task.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"scheduled_test/scheduled_test.Task.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}