{"name":"ScheduledProcess","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess","comment":"<p>A class representing a <a>scheduled_test/dart-io.Process</a> that is scheduled to run in the course of\nthe test. This class allows actions on the process to be scheduled\nsynchronously. All operations on this class are scheduled.</p>\n<p>Before running the test, either <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.shouldExit</a> or <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.kill</a> must be called on\nthis to ensure that the process terminates when expected. Note that <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.kill</a>\nis using SIGKILL, to ensure the process is killed on Mac OS X (an early\nSIGTERM on Mac OS X may be ignored).</p>\n<p>If the test fails, this will automatically print out any stdout and stderr\nfrom the process to aid debugging.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"description":{"name":"description","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.description","comment":"<p>A description of the process. Used for error reporting.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"stderr":{"name":"stderr","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.stderr","comment":"<p>A line-by-line view of the standard error stream of the process.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.ScheduledStream","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"stdout":{"name":"stdout","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.stdout","comment":"<p>A line-by-line view of the standard output stream of the process.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.ScheduledStream","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{"start":{"name":"start","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start","comment":"<p>Schedules a process to start. <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.executable</a>, <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.arguments</a>,\n<a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.workingDirectory</a>, and <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.environment</a> have the same meaning as for\n<a>scheduled_test/dart-io.Process.start</a>. <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.description</a> is a string description of this process; it\ndefaults to the command-line invocation. <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.encoding</a> is the <a>scheduled_test/dart-convert.Encoding</a> that\nwill be used for the process's input and output.</p>\n<p><a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.executable</a>, <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.arguments</a>, <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.workingDirectory</a>, and <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.environment</a> may be\neither a <a>scheduled_test/dart-async.Future</a> or a concrete value. If any are <a>scheduled_test/dart-async.Future</a>s, the process\nwon't start until the <a>scheduled_test/dart-async.Future</a>s have completed. In addition, <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.ScheduledProcess-start.arguments</a>\nmay be a <a>dart-core.List</a> containing a mix of strings and <a>scheduled_test/dart-async.Future</a>s.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"executable":{"name":"executable","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"arguments":{"name":"arguments","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"workingDirectory":{"name":"workingDirectory","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"environment":{"name":"environment","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"description":{"name":"description","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"encoding":{"name":"encoding","optional":true,"named":true,"default":true,"type":[{"outer":"dart-convert.Encoding","inner":[]}],"value":"ConstructedConstant(Utf8Codec(\"_allowMalformed\"=Instance of 'FalseConstant'))","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"closeStdin":{"name":"closeStdin","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.closeStdin","comment":"<p>Closes the process's stdin stream.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"kill":{"name":"kill","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.kill","comment":"<p>Kills the process, and waits until it's dead.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"shouldExit":{"name":"shouldExit","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.shouldExit","comment":"<p>Waits for the process to exit, and verifies that the exit code matches\n<a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.shouldExit.expectedExitCode</a> (if given).</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"expectedExitCode":{"name":"expectedExitCode","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"stderrStream":{"name":"stderrStream","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.stderrStream","comment":"<p>Returns a stream that will emit anything the process emits via the\nprocess's standard error from now on.</p>\n<p>This stream will be independent from any other methods that deal with\nstandard error, including other calls to <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.stderrStream</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"stdoutStream":{"name":"stdoutStream","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.stdoutStream","comment":"<p>Returns a stream that will emit anything the process emits via the\nprocess's standard output from now on.</p>\n<p>This stream will be independent from any other methods that deal with\nstandard output, including other calls to <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.stdoutStream</a>.</p>\n<p>This can be overridden by subclasses to return a derived standard output\nstream. This stream will then be used for <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.stdout</a> and <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.stderr</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{},"annotations":[]},"writeLine":{"name":"writeLine","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.writeLine","comment":"<p>Writes <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.writeLine.line</a> to the process as stdin.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"line":{"name":"line","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.noSuchMethod","comment":"<p><a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"scheduled_test/scheduled_test-scheduled_process.ScheduledProcess.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}