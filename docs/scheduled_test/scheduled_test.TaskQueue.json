{"name":"TaskQueue","qualifiedName":"scheduled_test/scheduled_test.TaskQueue","comment":"<p>A queue of asynchronous tasks to execute in order.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"name":{"name":"name","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.name","comment":"<p>The name of the queue, for debugging purposes.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"contents":{"name":"contents","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.contents","comment":"<p>The tasks in the queue.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"scheduled_test/scheduled_test.Task","inner":[]}]}],"parameters":{},"annotations":[]},"isRunning":{"name":"isRunning","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.isRunning","comment":"<p>Whether this queue is currently running.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"isRunningTasks":{"name":"isRunningTasks","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.isRunningTasks","comment":"<p>Whether this queue is running its tasks (as opposed to waiting for\nout-of-band callbacks or not running at all).</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"onTasksComplete":{"name":"onTasksComplete","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.onTasksComplete","comment":"<p>A <a>scheduled_test/dart-async.Future</a> that completes when the tasks in this are all complete. If an\nerror occurs while running this queue, the returned <a>scheduled_test/dart-async.Future</a> will complete\nwith that error.</p>\n<p>The returned <a>scheduled_test/dart-async.Future</a> can complete before outstanding out-of-band\ncallbacks have finished running.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{},"annotations":[]},"pendingCallbacks":{"name":"pendingCallbacks","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.pendingCallbacks","comment":"<p>The descriptions of all callbacks that are blocking the completion of\nthis.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"scheduled_test/scheduled_test.PendingCallback","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"generateTree":{"name":"generateTree","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.generateTree","comment":"<p>Returns a detailed representation of the queue as a tree of tasks. If\n<a>scheduled_test/scheduled_test.TaskQueue.generateTree.highlight</a> is passed, that task is specially highlighted.</p>\n<p><a>scheduled_test/scheduled_test.TaskQueue.generateTree.highlight</a> must be a task in this queue.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"highlight":{"name":"highlight","optional":true,"named":false,"default":false,"type":[{"outer":"scheduled_test/scheduled_test.Task","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"schedule":{"name":"schedule","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.schedule","comment":"<p>Schedules a task, <a>scheduled_test/scheduled_test.TaskQueue.schedule.fn</a>, to run asynchronously as part of this queue. Tasks\nwill be run in the order they're scheduled. In <a>scheduled_test/scheduled_test.TaskQueue.schedule.fn</a> returns a <a>scheduled_test/dart-async.Future</a>,\ntasks after it won't be run until that <a>scheduled_test/dart-async.Future</a> completes.</p>\n<p>The return value will be completed once the scheduled task has finished\nrunning. Its return value is the same as the return value of <a>scheduled_test/scheduled_test.TaskQueue.schedule.fn</a>, or the\nvalue it completes to if it's a <a>scheduled_test/dart-async.Future</a>.</p>\n<p>If <a>scheduled_test/scheduled_test.TaskQueue.schedule.description</a> is passed, it's used to describe the task for debugging\npurposes when an error occurs.</p>\n<p>If this is called when this queue is currently running, it will run <a>scheduled_test/scheduled_test.TaskQueue.schedule.fn</a>\non the next event loop iteration rather than adding it to a queue--this is\nknown as a \"nested task\". The current task will not complete until <a>scheduled_test/scheduled_test.TaskQueue.schedule.fn</a>\n(and any <a>scheduled_test/dart-async.Future</a> it returns) has finished running. Any errors in <a>scheduled_test/scheduled_test.TaskQueue.schedule.fn</a>\nwill automatically be handled. Nested tasks run in parallel, unlike\ntop-level tasks which run in sequence.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"fn":{"name":"fn","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dynamic","inner":[]}],"parameters":{}}},"description":{"name":"description","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>scheduled_test/scheduled_test.TaskQueue.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>scheduled_test/scheduled_test.TaskQueue.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>scheduled_test/scheduled_test.TaskQueue.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.noSuchMethod","comment":"<p><a>scheduled_test/scheduled_test.TaskQueue.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>scheduled_test/scheduled_test.TaskQueue.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>scheduled_test/scheduled_test.TaskQueue.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>scheduled_test/scheduled_test.TaskQueue.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"scheduled_test/scheduled_test.TaskQueue.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}