{"name":"DirectoryDescriptor","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor","comment":"<p>A descriptor describing a directory containing multiple files.</p>","isAbstract":false,"superclass":"scheduled_test/scheduled_test-descriptor.Descriptor","implements":["scheduled_test/scheduled_test-descriptor.LoadableDescriptor"],"subclass":[],"variables":{"contents":{"name":"contents","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.contents","comment":"<p>The entries contained within this directory. This is intentionally\nmutable.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"scheduled_test/scheduled_test-descriptor.Descriptor","inner":[]}]}],"annotations":[]}},"inheritedVariables":{"name":{"name":"name","qualifiedName":"scheduled_test/scheduled_test-descriptor.Descriptor.name","comment":"<p>The name of this entry.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.DirectoryDescriptor-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"contents":{"name":"contents","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"scheduled_test/scheduled_test-descriptor.Descriptor","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"create":{"name":"create","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.create","comment":"<p>Schedules the creation of the described entry within the <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.create.parent</a>\ndirectory. Returns a <a>scheduled_test/dart-async.Future</a> that completes after the creation is done.</p>\n<p><a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.create.parent</a> defaults to <a>scheduled_test/scheduled_test-descriptor.defaultRoot</a>.</p>","commentFrom":"scheduled_test-descriptor.Descriptor.create","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"parent":{"name":"parent","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"validate":{"name":"validate","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validate","comment":"<p>Schedules the validation of the described entry. This validates that the\nphysical file system under <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validate.parent</a> contains an entry that matches the one\ndescribed by this. Returns a <a>scheduled_test/dart-async.Future</a> that completes to <code>null</code> if the\nentry is valid, or throws an error if it failed.</p>\n<p><a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validate.parent</a> defaults to <a>scheduled_test/scheduled_test-descriptor.defaultRoot</a>.</p>","commentFrom":"scheduled_test-descriptor.Descriptor.validate","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"parent":{"name":"parent","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"validateNow":{"name":"validateNow","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validateNow","comment":"<p>An unscheduled version of <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validate</a>. This is useful if validation errors\nneed to be caught, since otherwise they'd be registered by the schedule.</p>","commentFrom":"scheduled_test-descriptor.Descriptor.validateNow","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"parent":{"name":"parent","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"load":{"name":"load","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.load","comment":"<p>Treats this as an in-memory filesystem and returns a stream of the\ncontents of the child entry located at path. This only works if this\nis a directory entry. This operation is not <a>scheduled_test/scheduled_test.schedule</a>d.</p>\n<p>This method uses POSIX paths regardless of the underlying operating\nsystem.</p>\n<p>All errors in loading the file will be passed through the returned\n<a>scheduled_test/dart-async.Stream</a>.</p>","commentFrom":"scheduled_test-descriptor.LoadableDescriptor.load","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"parameters":{"pathToLoad":{"name":"pathToLoad","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"describe":{"name":"describe","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.describe","comment":"<p>Returns a detailed tree-style description of this.</p>","commentFrom":"scheduled_test-descriptor.Descriptor.describe","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.noSuchMethod","comment":"<p><a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"create":{"name":"create","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.create","comment":"<p>Schedules the creation of the described entry within the <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.create.parent</a>\ndirectory. Returns a <a>scheduled_test/dart-async.Future</a> that completes after the creation is done.</p>\n<p><a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.create.parent</a> defaults to <a>scheduled_test/scheduled_test-descriptor.defaultRoot</a>.</p>","commentFrom":"","inheritedFrom":"scheduled_test-descriptor.Descriptor.create","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"parent":{"name":"parent","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"validate":{"name":"validate","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validate","comment":"<p>Schedules the validation of the described entry. This validates that the\nphysical file system under <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validate.parent</a> contains an entry that matches the one\ndescribed by this. Returns a <a>scheduled_test/dart-async.Future</a> that completes to <code>null</code> if the\nentry is valid, or throws an error if it failed.</p>\n<p><a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validate.parent</a> defaults to <a>scheduled_test/scheduled_test-descriptor.defaultRoot</a>.</p>","commentFrom":"","inheritedFrom":"scheduled_test-descriptor.Descriptor.validate","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"parent":{"name":"parent","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"validateNow":{"name":"validateNow","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validateNow","comment":"<p>An unscheduled version of <a>scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.validate</a>. This is useful if validation errors\nneed to be caught, since otherwise they'd be registered by the schedule.</p>","commentFrom":"","inheritedFrom":"scheduled_test-descriptor.Descriptor.validateNow","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"parent":{"name":"parent","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"describe":{"name":"describe","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.describe","comment":"<p>Returns a detailed tree-style description of this.</p>","commentFrom":"","inheritedFrom":"scheduled_test-descriptor.Descriptor.describe","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"load":{"name":"load","qualifiedName":"scheduled_test/scheduled_test-descriptor.DirectoryDescriptor.load","comment":"<p>Treats this as an in-memory filesystem and returns a stream of the\ncontents of the child entry located at path. This only works if this\nis a directory entry. This operation is not <a>scheduled_test/scheduled_test.schedule</a>d.</p>\n<p>This method uses POSIX paths regardless of the underlying operating\nsystem.</p>\n<p>All errors in loading the file will be passed through the returned\n<a>scheduled_test/dart-async.Stream</a>.</p>","commentFrom":"","inheritedFrom":"scheduled_test-descriptor.LoadableDescriptor.load","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-async.Stream","inner":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}]}],"parameters":{"pathToLoad":{"name":"pathToLoad","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}