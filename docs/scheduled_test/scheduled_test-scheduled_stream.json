{"name":"scheduled_test-scheduled_stream","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream","comment":"","variables":{},"functions":{"setters":{},"getters":{"isDone":{"name":"isDone","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.isDone","comment":"<p>A matcher that matches a stream that emits no more values.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"never":{"name":"never","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.never","comment":"<p>A matcher that asserts that a stream never emits values matching\n<a>scheduled_test/scheduled_test-scheduled_stream.never.streamMatcher</a>.</p>\n<p>This will consume the remainder of a stream.</p>\n<p><a>scheduled_test/scheduled_test-scheduled_stream.never.streamMatcher</a> can be a <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>, a <a>scheduled_test/unittest-matcher.Matcher</a>, or an <a>dart-core.Object</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{"streamMatcher":{"name":"streamMatcher","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"allow":{"name":"allow","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.allow","comment":"<p>A matcher that consumes <a>scheduled_test/scheduled_test-scheduled_stream.allow.streamMatcher</a> if it matches, or nothing otherwise.</p>\n<p>This matcher will always match a stream. It exists to consume values that\nmay or may not be emitted by a stream.</p>\n<p><a>scheduled_test/scheduled_test-scheduled_stream.allow.streamMatcher</a> can be a <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>, a <a>scheduled_test/unittest-matcher.Matcher</a>, or an <a>dart-core.Object</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{"streamMatcher":{"name":"streamMatcher","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"either":{"name":"either","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.either","comment":"<p>A matcher that matches either <a>scheduled_test/scheduled_test-scheduled_stream.either.streamMatcher1</a>, <a>scheduled_test/scheduled_test-scheduled_stream.either.streamMatcher2</a>, or both.</p>\n<p>If both matchers match the stream, the one that consumed more values will be\nused.</p>\n<p>Both <a>scheduled_test/scheduled_test-scheduled_stream.either.streamMatcher1</a> and <a>scheduled_test/scheduled_test-scheduled_stream.either.streamMatcher2</a> can be a <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>, a\n<a>scheduled_test/unittest-matcher.Matcher</a>, or an <a>dart-core.Object</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{"streamMatcher1":{"name":"streamMatcher1","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]},"streamMatcher2":{"name":"streamMatcher2","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"consumeWhile":{"name":"consumeWhile","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.consumeWhile","comment":"<p>A matcher that consumes values emitted by a stream as long as they match\n<a>scheduled_test/scheduled_test-scheduled_stream.consumeWhile.streamMatcher</a>.</p>\n<p>This matcher will always match a stream. It exists to consume values. If\n<a>scheduled_test/scheduled_test-scheduled_stream.consumeWhile.streamMatcher</a> consumes more than one value, the next match will begin\nafter all the consumed values.</p>\n<p><a>scheduled_test/scheduled_test-scheduled_stream.consumeWhile.streamMatcher</a> can be a <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>, a <a>scheduled_test/unittest-matcher.Matcher</a> or an <a>dart-core.Object</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{"streamMatcher":{"name":"streamMatcher","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"consumeThrough":{"name":"consumeThrough","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.consumeThrough","comment":"<p>A matcher that consumes values emitted by a stream until one matching\n<a>scheduled_test/scheduled_test-scheduled_stream.consumeThrough.streamMatcher</a> is emitted.</p>\n<p>This will fail if the stream never emits a value that matches\n<a>scheduled_test/scheduled_test-scheduled_stream.consumeThrough.streamMatcher</a>.</p>\n<p><a>scheduled_test/scheduled_test-scheduled_stream.consumeThrough.streamMatcher</a> can be a <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>, a <a>scheduled_test/unittest-matcher.Matcher</a> or an <a>dart-core.Object</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{"streamMatcher":{"name":"streamMatcher","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"inOrder":{"name":"inOrder","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.inOrder","comment":"<p>A matcher that matches several sub-matchers in sequence.</p>\n<p>Each element of <a>scheduled_test/scheduled_test-scheduled_stream.inOrder.streamMatchers</a> can be a <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>, a <a>scheduled_test/unittest-matcher.Matcher</a>, or\nan <a>dart-core.Object</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{"streamMatchers":{"name":"streamMatchers","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"nextValues":{"name":"nextValues","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.nextValues","comment":"<p>A matcher that consumes <a>scheduled_test/scheduled_test-scheduled_stream.nextValues.n</a> values and matches a list containing those\nobjects against <a>scheduled_test/scheduled_test-scheduled_stream.nextValues.matcher</a>.</p>\n<p><a>scheduled_test/scheduled_test-scheduled_stream.nextValues.matcher</a> can be a <a>scheduled_test/unittest-matcher.Matcher</a> or an <a>dart-core.Object</a>, but not a <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{"n":{"name":"n","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"matcher":{"name":"matcher","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"nextValue":{"name":"nextValue","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.nextValue","comment":"<p>A matcher that consumes and matches a single value.</p>\n<p><a>scheduled_test/scheduled_test-scheduled_stream.nextValue.matcher</a> can be a <a>scheduled_test/unittest-matcher.Matcher</a> or an <a>dart-core.Object</a>, but not a <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","inner":[]}],"parameters":{"matcher":{"name":"matcher","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"StreamMatcher","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.StreamMatcher","preview":"<p>An abstract superclass for matchers that validate and consume zero or more\nvalues emitted by a <a>scheduled_test/scheduled_test-scheduled_stream.ScheduledStream</a>.</p>"},{"name":"ScheduledStream","qualifiedName":"scheduled_test/scheduled_test-scheduled_stream.ScheduledStream","preview":"<p>A wrapper for streams that supports a pull-based model of retrieving values\nas well as a set of <a>scheduled_test/scheduled_test-scheduled_stream.StreamMatcher</a>s for testing the values emitted by the\nstream.</p>"}],"typedef":{},"error":[]},"packageName":"scheduled_test","packageIntro":""}