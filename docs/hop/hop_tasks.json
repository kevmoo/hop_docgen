{"name":"hop_tasks","qualifiedName":"hop/hop_tasks","comment":"<p>Useful Task implementations and helpers.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"branchForDir":{"name":"branchForDir","qualifiedName":"hop/hop_tasks.branchForDir","comment":"<p><strong>DEPRECATED</strong>. Use <code>hop_git</code> package instead.</p>\n<p>Creates and populates a branch with <a>hop/hop_tasks.branchForDir.sourceDir</a>.</p>\n<p>The contents of <a>hop/hop_tasks.branchForDir.sourceDir</a> on the <a>hop/hop_tasks.branchForDir.sourceBranch</a> are used to create or\nupdate <a>hop/hop_tasks.branchForDir.targetBranch</a>.</p>\n<p><a>hop/hop_tasks.getBranchForDirTask</a> wraps this into a <a>hop/hop-core.Task</a> and provides a description.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"ctx":{"name":"ctx","optional":false,"named":false,"default":false,"type":[{"outer":"hop-core.TaskContext","inner":[]}],"value":null,"annotations":[]},"sourceBranch":{"name":"sourceBranch","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"sourceDir":{"name":"sourceDir","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"targetBranch":{"name":"targetBranch","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"workingDir":{"name":"workingDir","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"hop/dart-core.deprecated","parameters":[]}]},"createAnalyzerTask":{"name":"createAnalyzerTask","qualifiedName":"hop/hop_tasks.createAnalyzerTask","comment":"<p>Creates a task which runs <code>dartanalyzer</code> on each file in\n<a>hop/hop_tasks.createAnalyzerTask.delayedFileList</a>.</p>\n<p>delayedRootList is <a>dart-core</a>&lt;<a>dart-core</a>> mapping to Dart source files. It can\nalso be a <a>hop/dart-async.Future</a> or <a>dart-core.Function</a> values which return <a>dart-core</a>&lt;<a>dart-core</a>>.</p>\n<p><code>dartanalyzer</code> is recursive. It scans imported files also.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"hop-core.Task","inner":[]}],"parameters":{"delayedFileList":{"name":"delayedFileList","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"createBenchTask":{"name":"createBenchTask","qualifiedName":"hop/hop_tasks.createBenchTask","comment":"<p>Creates a benchmarking task.</p>\n<p>This task will run a command a number of times (the default is 20) and\nprint statistics about the execution time of the command.</p>\n<p>If the Hop task \"bench\" is this task, running:</p>\n<pre><code>dart tool/hop_runner.dart bench ls\n</code></pre>\n<p>Will print:</p>\n<pre><code>bench: Min       0:00:00.002491\n       Max       0:00:00.010142\n       Media     0:00:00.002720\n       Mean      0:00:00.003241\n       StdDev    0:00:00.001687\n       StdDev%   52.05938%\n       StdErr    0:00:00.000377\n       StdDev%   11.64083%\n</code></pre>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"hop-core.Task","inner":[]}],"parameters":{},"annotations":[]},"createDartCompilerTask":{"name":"createDartCompilerTask","qualifiedName":"hop/hop_tasks.createDartCompilerTask","comment":"<p>Runs <code>dart2js</code> on the specified files.</p>\n<p><a>hop/hop_tasks.createDartCompilerTask.delayedRootList</a> is <a>dart-core</a>&lt;<a>dart-core</a>> mapping to librarie paths. It can also\nbe a <a>hop/dart-async.Future</a> or <a>dart-core.Function</a> values which return <a>dart-core</a>&lt;<a>dart-core</a>>.</p>\n<p><a>hop/hop_tasks.createDartCompilerTask.outputType</a> must be one of type <a>hop/hop_tasks.CompilerTargetType</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"hop-core.Task","inner":[]}],"parameters":{"delayedRootList":{"name":"delayedRootList","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"singleOutput":{"name":"singleOutput","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"packageRoot":{"name":"packageRoot","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"minify":{"name":"minify","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"liveTypeAnalysis":{"name":"liveTypeAnalysis","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"true","annotations":[]},"throwOnError":{"name":"throwOnError","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"verbose":{"name":"verbose","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"true","annotations":[]},"suppressWarnings":{"name":"suppressWarnings","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"outputType":{"name":"outputType","optional":true,"named":true,"default":true,"type":[{"outer":"hop/hop_tasks.CompilerTargetType","inner":[]}],"value":"ConstructedConstant(CompilerTargetType(\"fileExt\"=Instance of 'StringConstant',\"friendlyName\"=Instance of 'StringConstant'))","annotations":[]},"outputMapper":{"name":"outputMapper","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[],"functionDeclaration":{"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"source":{"name":"source","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}}}},"checked":{"name":"checked","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]}},"annotations":[]},"createProcessTask":{"name":"createProcessTask","qualifiedName":"hop/hop_tasks.createProcessTask","comment":"<p>Creates a task which runs the specified <a>hop/hop_tasks.createProcessTask.command</a> in the shell.</p>\n<p><a>hop/hop_tasks.createProcessTask.command</a> is the shell command that this task runs. A command that works\nwith one shell may not work with another shell.</p>\n<p><a>hop/hop_tasks.createProcessTask.args</a> is a list of arguments to pass to <a>hop/hop_tasks.createProcessTask.command</a>.</p>\n<p><a>hop/hop_tasks.createProcessTask.description</a> is the description of the task. This is displayed next to the\ntask's name in the help.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"hop-core.Task","inner":[]}],"parameters":{"command":{"name":"command","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"args":{"name":"args","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]},"description":{"name":"description","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"createUnitTestTask":{"name":"createUnitTestTask","qualifiedName":"hop/hop_tasks.createUnitTestTask","comment":"<p><strong>DEPRECATED</strong>. Use <code>hop_unittest</code> package instead.</p>\n<p>Creates a <a>hop/hop-core.Task</a> which runs the unit tests defined by <a>hop/hop_tasks.createUnitTestTask.unitTestAction</a>.</p>\n<p><a>hop/hop_tasks.createUnitTestTask.unitTestAction</a> should be in the form <code>void function()</code>.</p>\n<p><a>hop/hop_tasks.createUnitTestTask.unitTestAction</a> in the form <code>void function(Configuration config)</code> is\ndeprecated.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"hop-core.Task","inner":[]}],"parameters":{"unitTestAction":{"name":"unitTestAction","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":null,"annotations":[]},"timeout":{"name":"timeout","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.Duration","inner":[]}],"value":"ConstructedConstant(Duration(\"_duration\"=Instance of 'IntConstant'))","annotations":[]}},"annotations":[{"name":"hop/dart-core.deprecated","parameters":[]}]},"getBranchForDirTask":{"name":"getBranchForDirTask","qualifiedName":"hop/hop_tasks.getBranchForDirTask","comment":"<p><strong>DEPRECATED</strong>. Use <code>hop_git</code> package instead.</p>\n<p>Creates a <a>hop/hop-core.Task</a> which creates and populates a branch with <a>hop/hop_tasks.getBranchForDirTask.sourceDir</a>.</p>\n<p>The contents of <a>hop/hop_tasks.getBranchForDirTask.sourceDir</a> on the <a>hop/hop_tasks.getBranchForDirTask.sourceBranch</a> are used to create or\nupdate <a>hop/hop_tasks.getBranchForDirTask.targetBranch</a>.</p>\n<p>This task wraps <a>hop/hop_tasks.branchForDir</a> and provides a description.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"hop-core.Task","inner":[]}],"parameters":{"sourceBranch":{"name":"sourceBranch","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"sourceDir":{"name":"sourceDir","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"targetBranch":{"name":"targetBranch","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"workingDir":{"name":"workingDir","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"hop/dart-core.deprecated","parameters":[]}]},"pipeProcess":{"name":"pipeProcess","qualifiedName":"hop/hop_tasks.pipeProcess","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"process":{"name":"process","optional":false,"named":false,"default":false,"type":[{"outer":"dart-io.Process","inner":[]}],"value":null,"annotations":[]},"stdOutWriter":{"name":"stdOutWriter","optional":true,"named":true,"default":false,"type":[{"outer":"bot-typedefs.Action1","inner":[]}],"value":null,"annotations":[]},"stdErrWriter":{"name":"stdErrWriter","optional":true,"named":true,"default":false,"type":[{"outer":"bot-typedefs.Action1","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"startProcess":{"name":"startProcess","qualifiedName":"hop/hop_tasks.startProcess","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[]}],"parameters":{"logger":{"name":"logger","optional":false,"named":false,"default":false,"type":[{"outer":"hop-core.TaskLogger","inner":[]}],"value":null,"annotations":[]},"command":{"name":"command","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"args":{"name":"args","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"CompilerTargetType","qualifiedName":"hop/hop_tasks.CompilerTargetType"}],"typedef":{},"error":[]},"packageName":"hop","packageIntro":"<p><a href=\"https://raw.github.com/dart-lang/hop/master/resource/logo.png\"><img alt=\"Hop!\" src=\"https://raw.github.com/dart-lang/hop/master/resource/logo.png\"></img></a></p>\n<h2>A Dart framework for reusable tasks</h2>\n<p><a href=\"https://drone.io/github.com/dart-lang/hop/latest\"><a href=\"https://drone.io/github.com/dart-lang/hop/status.png\"><img alt=\"Build Status\" src=\"https://drone.io/github.com/dart-lang/hop/status.png\"></img></a></a> <a href=\"http://waffle.io/dart-lang/hop\"><a href=\"https://badge.waffle.io/dart-lang/hop.png?label=ready\"><img alt=\"Stories in Ready\" src=\"https://badge.waffle.io/dart-lang/hop.png?label=ready\"></img></a></a></p>\n<h1>Getting started</h1><ul><li>Read <a href=\"https://github.com/dart-lang/hop/wiki\">the wiki</a>.</li><li>Read the <a href=\"https://github.com/dart-lang/hop/blob/master/example/hop_runner.dart\">documented example</a>.</li><li>Check out Hop's <a href=\"https://github.com/dart-lang/hop/blob/master/tool/hop_runner.dart\">hop_runner</a>.</li></ul>\n<h1>Projects using Hop</h1><ul><li><a href=\"https://github.com/dart-lang/pop-pop-win\">Pop, Pop, Win!</a> - Minesweeper with balloons</li><li><a href=\"https://github.com/dart-lang/widget.dart\">Dart Widgets</a> - Reusable Web Components</li><li><a href=\"https://github.com/sethladd/lawndart\">Lawndart</a> - Unified, asynchronous, easy-to-use library for browser-based storage.</li><li><a href=\"https://github.com/johnmccutchan/spectre\">Spectre</a> - Spectre Graphics Engine for Dart</li><li><a href=\"https://github.com/johnmccutchan/vector_math\">vector_math</a> - A Vector math library for 2D and 3D applications.</li><li><a href=\"https://github.com/dart-gde/discovery_api_dart_client_generator\">Dart Client Generator for Discovery APIs</a></li><li><a href=\"https://github.com/dart-gde/chrome.dart\">chrome.dart</a> - Dart interop with chrome.* APIs for Chrome Packaged Apps</li><li><a href=\"https://github.com/kevmoo/qr.dart\">qr.dart</a> - Generate QR codes</li><li><a href=\"https://github.com/kevmoo/vote.dart\">vote.dart</a> - Simulate, run, and calculate elections with different election methods</li></ul>\n<h1>Try It Now</h1>\n<p>The <strong>The Hop task management system for Dart</strong> is hosted on <a href=\"http://pub.dartlang.org/packages/hop\">pub.dartlang.org</a>. Add the <strong>Hop</strong> package to your <code>pubspec.yaml</code> file, selecting a version range that works with your version of the SDK. <em>Always check the <a href=\"http://pub.dartlang.org/packages/hop\">Hop page</a> on pub to find the latest release.</em></p>\n<p>See the <a href=\"https://github.com/dart-lang/hop/blob/master/changelog.md\">changelog</a> to find the version that works best for you.</p>\n<h1>Authors</h1><ul><li><a href=\"https://github.com/kevmoo\">Kevin Moore</a> (<a href=\"https://plus.google.com/110066012384188006594/\">+Kevin Moore</a>, <a href=\"http://twitter.com/kevmoo\">@kevmoo</a>)</li><li><a href=\"https://github.com/financeCoding\">Adam Singer</a> (<a href=\"https://plus.google.com/104569492481999771226\">+Adam Singer</a>)</li><li><a href=\"https://github.com/damondouglas\">Damon Douglas</a> (<a href=\"https://plus.google.com/u/0/108940381045821372455/\">+Damon Douglas</a>)</li><li><a href=\"https://github.com/devoncarew\">Devon Carew</a> (<a href=\"https://plus.google.com/104561874283081442379/\">+Devon Carew</a>)</li><li>Martin Charles</li></ul>"}