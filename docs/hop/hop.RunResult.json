{"name":"RunResult","qualifiedName":"hop/hop.RunResult","comment":"<p>For explanations of exit codes see <a href=\"http://tldp.org/LDP/abs/html/exitcodes.html\">http://tldp.org/LDP/abs/html/exitcodes.html</a></p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"BAD_USAGE":{"name":"BAD_USAGE","qualifiedName":"hop/hop.RunResult.BAD_USAGE","comment":"<p>Hop was called with bad arguments.</p>\n<p>Code 64</p>\n<p>See <code>EX_USAGE</code> in <a href=\"http://www.retro11.de/ouxr/211bsd/usr/include/sysexits.h.html\">http://www.retro11.de/ouxr/211bsd/usr/include/sysexits.h.html</a></p>","final":true,"static":true,"constant":false,"type":[{"outer":"hop/hop.RunResult","inner":[]}],"annotations":[]},"ERROR":{"name":"ERROR","qualifiedName":"hop/hop.RunResult.ERROR","comment":"<p>Task misbehaved. Returned null, used <a>hop/hop.TaskContext</a> incorrectly, etc.</p>\n<p>Code 82</p>","final":true,"static":true,"constant":false,"type":[{"outer":"hop/hop.RunResult","inner":[]}],"annotations":[]},"EXCEPTION":{"name":"EXCEPTION","qualifiedName":"hop/hop.RunResult.EXCEPTION","comment":"<p>Task was was started, but threw an exception</p>\n<p>Code 81</p>","final":true,"static":true,"constant":false,"type":[{"outer":"hop/hop.RunResult","inner":[]}],"annotations":[]},"FAIL":{"name":"FAIL","qualifiedName":"hop/hop.RunResult.FAIL","comment":"<p>Task was was started and failed gracefully</p>\n<p>Code 80</p>","final":true,"static":true,"constant":false,"type":[{"outer":"hop/hop.RunResult","inner":[]}],"annotations":[]},"SUCCESS":{"name":"SUCCESS","qualifiedName":"hop/hop.RunResult.SUCCESS","comment":"<p>Ran successfully</p>\n<p>Code 0</p>","final":true,"static":true,"constant":false,"type":[{"outer":"hop/hop.RunResult","inner":[]}],"annotations":[]},"exitCode":{"name":"exitCode","qualifiedName":"hop/hop.RunResult.exitCode","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"name":{"name":"name","qualifiedName":"hop/hop.RunResult.name","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"success":{"name":"success","qualifiedName":"hop/hop.RunResult.success","comment":"","commentFrom":"hop.RunResult.success","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"toString":{"name":"toString","qualifiedName":"hop/hop.RunResult.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"hop/hop.RunResult.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>hop/hop.RunResult.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"hop/hop.RunResult.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"hop/hop.RunResult.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>hop/hop.RunResult.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>hop/hop.RunResult.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"hop/hop.RunResult.noSuchMethod","comment":"<p><a>hop/hop.RunResult.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>hop/hop.RunResult.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>hop/hop.RunResult.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>hop/hop.RunResult.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"hop/hop.RunResult.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}