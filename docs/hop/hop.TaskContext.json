{"name":"TaskContext","qualifiedName":"hop/hop.TaskContext","comment":"<p>The context of a <a>hop/hop.Task</a> invoked by the user.</p>\n<p>Contains the parsed <a>hop/args.ArgResults</a> parsed from the user.</p>","isAbstract":true,"superclass":"dart-core.Object","implements":["hop/hop.TaskLogger"],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"arguments":{"name":"arguments","qualifiedName":"hop/hop.TaskContext.arguments","comment":"","commentFrom":"hop.TaskContext.arguments","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"args.ArgResults","inner":[]}],"parameters":{},"annotations":[]},"extendedArgs":{"name":"extendedArgs","qualifiedName":"hop/hop.TaskContext.extendedArgs","comment":"","commentFrom":"hop.TaskContext.extendedArgs","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"fail":{"name":"fail","qualifiedName":"hop/hop.TaskContext.fail","comment":"<p>Terminates the current <a>hop/hop.Task</a> with a failure, explained by <a>hop/hop.TaskContext.fail.message</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"hop/hop.TaskContext.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>hop/hop.TaskContext.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"hop/hop.TaskContext.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"isDisposed":{"name":"isDisposed","qualifiedName":"hop/hop.TaskContext.isDisposed","comment":"","commentFrom":"","inheritedFrom":"bot.Disposable.isDisposed","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"hop/hop.TaskContext.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>hop/hop.TaskContext.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>hop/hop.TaskContext.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"hop/hop.TaskContext.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"hop/hop.TaskContext.noSuchMethod","comment":"<p><a>hop/hop.TaskContext.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>hop/hop.TaskContext.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>hop/hop.TaskContext.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>hop/hop.TaskContext.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"dispose":{"name":"dispose","qualifiedName":"hop/hop.TaskContext.dispose","comment":"","commentFrom":"","inheritedFrom":"bot.Disposable.dispose","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"getSubLogger":{"name":"getSubLogger","qualifiedName":"hop/hop.TaskContext.getSubLogger","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.getSubLogger","static":false,"abstract":true,"constant":false,"return":[{"outer":"hop/hop.TaskLogger","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"finest":{"name":"finest","qualifiedName":"hop/hop.TaskContext.finest","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.finest","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"finer":{"name":"finer","qualifiedName":"hop/hop.TaskContext.finer","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.finer","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"fine":{"name":"fine","qualifiedName":"hop/hop.TaskContext.fine","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.fine","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"config":{"name":"config","qualifiedName":"hop/hop.TaskContext.config","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.config","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"info":{"name":"info","qualifiedName":"hop/hop.TaskContext.info","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.info","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"warning":{"name":"warning","qualifiedName":"hop/hop.TaskContext.warning","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.warning","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"severe":{"name":"severe","qualifiedName":"hop/hop.TaskContext.severe","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.severe","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"log":{"name":"log","qualifiedName":"hop/hop.TaskContext.log","comment":"","commentFrom":"","inheritedFrom":"hop.TaskLogger.log","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"logLevel":{"name":"logLevel","optional":false,"named":false,"default":false,"type":[{"outer":"logging.Level","inner":[]}],"value":"null","annotations":[]},"message":{"name":"message","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}