{"name":"hop","qualifiedName":"hop/hop","comment":"<p>The main Hop library.</p>\n<p>Should be imported into a 'tool/hop_runner.dart' file.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"addChainedTask":{"name":"addChainedTask","qualifiedName":"hop/hop.addChainedTask","comment":"<p>Creates a <a>hop/hop.Task</a> which runs multiple tasks.</p>\n<p><a>hop/hop.addChainedTask.name</a> specifies the <a>dart-core.String</a> used to identify the task.</p>\n<p><a>hop/hop.addChainedTask.existingTaskNames</a> is an <a>dart-core.Iterable</a> specifying the existing tasks to be run\nwhen this task is run.</p>\n<p><a>hop/hop.addChainedTask.description</a> provides information when help is displayed for the task.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"hop/hop.Task","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"existingTaskNames":{"name":"existingTaskNames","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"description":{"name":"description","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"addTask":{"name":"addTask","qualifiedName":"hop/hop.addTask","comment":"<p>Adds a <a>hop/hop.Task</a> to Hop.</p>\n<p><a>hop/hop.addTask.name</a> specifies the <a>dart-core.String</a> used to identify the task.</p>\n<p><a>hop/hop.addTask.task</a> can be either an instance of <a>hop/hop.Task</a> or a <a>dart-core.Function</a>.</p>\n<p>If <a>hop/hop.addTask.task</a> is a <a>dart-core.Function</a>, it must take one argument: <a>hop/hop.TaskContext</a>. If a\n<a>hop/dart-async.Future</a> is returned from the <a>hop/hop.addTask.task</a> function, the runner will wait for the\n<a>hop/dart-async.Future</a> to complete.</p>\n<p>If <a>hop/hop.addTask.description</a> is provided and <a>hop/hop.addTask.task</a> is a <a>hop/hop.Task</a>, then <a>hop/hop.addTask.task</a> will be\ncloned and <a>hop/hop.addTask.description</a> will override the default description.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"hop/hop.Task","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"task":{"name":"task","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"description":{"name":"description","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"dependencies":{"name":"dependencies","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]}},"annotations":[]},"runHop":{"name":"runHop","qualifiedName":"hop/hop.runHop","comment":"<p>Runs Hop infrastructure after all tasks have been registered.</p>\n<p><a>hop/hop.runHop</a> calls <a>hop/dart-io.exit</a> which terminates the application.</p>\n<p>If <a>hop/hop.runHop.paranoid</a> is <code>true</code>, <a>hop/hop.runHop</a> will verify the running script is\n<code>tool/hop_runner.dart</code> relative to the working directory. If not, an\nerror is thrown.</p>\n<p><a>hop/hop.runHop.helpTaskName</a> defines the name of the help task. If <a>hop/hop.runHop.helpTaskName</a>\nconflicts with an already defined task, an error is thrown. Setting this\nto <code>null</code> will disable help.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"args":{"name":"args","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"paranoid":{"name":"paranoid","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"true","annotations":[]},"helpTaskName":{"name":"helpTaskName","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.String","inner":[]}],"value":"\"help\"","annotations":[]},"printAtLogLevel":{"name":"printAtLogLevel","optional":true,"named":true,"default":true,"type":[{"outer":"logging.Level","inner":[]}],"value":"ConstructedConstant(Level(\"name\"=Instance of 'StringConstant',\"value\"=Instance of 'IntConstant'))","annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"RunResult","qualifiedName":"hop/hop.RunResult","preview":"<p>For explanations of exit codes see <a href=\"http://tldp.org/LDP/abs/html/exitcodes.html\">http://tldp.org/LDP/abs/html/exitcodes.html</a></p>"},{"name":"Task","qualifiedName":"hop/hop.Task"},{"name":"TaskArgument","qualifiedName":"hop/hop.TaskArgument"},{"name":"TaskContext","qualifiedName":"hop/hop.TaskContext","preview":"<p>The context of a <a>hop/hop.Task</a> invoked by the user.</p>"},{"name":"TaskLogger","qualifiedName":"hop/hop.TaskLogger","preview":"<p>Allows logging of <a>hop/hop.Task</a> activities, spawning sub-loggers, and failing the\ncurrent <a>hop/hop.Task</a>;</p>"}],"typedef":{},"error":[]},"packageName":"hop","packageIntro":"<p><a href=\"https://raw.github.com/dart-lang/hop/master/resource/logo.png\"><img alt=\"Hop!\" src=\"https://raw.github.com/dart-lang/hop/master/resource/logo.png\"></img></a></p>\n<h2>A Dart framework for reusable tasks</h2>\n<p><a href=\"https://drone.io/github.com/dart-lang/hop/latest\"><a href=\"https://drone.io/github.com/dart-lang/hop/status.png\"><img alt=\"Build Status\" src=\"https://drone.io/github.com/dart-lang/hop/status.png\"></img></a></a> <a href=\"http://waffle.io/dart-lang/hop\"><a href=\"https://badge.waffle.io/dart-lang/hop.png?label=ready\"><img alt=\"Stories in Ready\" src=\"https://badge.waffle.io/dart-lang/hop.png?label=ready\"></img></a></a></p>\n<h1>Getting started</h1><ul><li>Read <a href=\"https://github.com/dart-lang/hop/wiki\">the wiki</a>.</li><li>Read the <a href=\"https://github.com/dart-lang/hop/blob/master/example/hop_runner.dart\">documented example</a>.</li><li>Check out Hop's <a href=\"https://github.com/dart-lang/hop/blob/master/tool/hop_runner.dart\">hop_runner</a>.</li></ul>\n<h1>Projects using Hop</h1><ul><li><a href=\"https://github.com/dart-lang/pop-pop-win\">Pop, Pop, Win!</a> - Minesweeper with balloons</li><li><a href=\"https://github.com/dart-lang/widget.dart\">Dart Widgets</a> - Reusable Web Components</li><li><a href=\"https://github.com/sethladd/lawndart\">Lawndart</a> - Unified, asynchronous, easy-to-use library for browser-based storage.</li><li><a href=\"https://github.com/johnmccutchan/spectre\">Spectre</a> - Spectre Graphics Engine for Dart</li><li><a href=\"https://github.com/johnmccutchan/vector_math\">vector_math</a> - A Vector math library for 2D and 3D applications.</li><li><a href=\"https://github.com/dart-gde/discovery_api_dart_client_generator\">Dart Client Generator for Discovery APIs</a></li><li><a href=\"https://github.com/dart-gde/chrome.dart\">chrome.dart</a> - Dart interop with chrome.* APIs for Chrome Packaged Apps</li><li><a href=\"https://github.com/kevmoo/qr.dart\">qr.dart</a> - Generate QR codes</li><li><a href=\"https://github.com/kevmoo/vote.dart\">vote.dart</a> - Simulate, run, and calculate elections with different election methods</li></ul>\n<h1>Try It Now</h1>\n<p>The <strong>The Hop task management system for Dart</strong> is hosted on <a href=\"http://pub.dartlang.org/packages/hop\">pub.dartlang.org</a>. Add the <strong>Hop</strong> package to your <code>pubspec.yaml</code> file, selecting a version range that works with your version of the SDK. <em>Always check the <a href=\"http://pub.dartlang.org/packages/hop\">Hop page</a> on pub to find the latest release.</em></p>\n<p>See the <a href=\"https://github.com/dart-lang/hop/blob/master/changelog.md\">changelog</a> to find the version that works best for you.</p>\n<h1>Authors</h1><ul><li><a href=\"https://github.com/kevmoo\">Kevin Moore</a> (<a href=\"https://plus.google.com/110066012384188006594/\">+Kevin Moore</a>, <a href=\"http://twitter.com/kevmoo\">@kevmoo</a>)</li><li><a href=\"https://github.com/financeCoding\">Adam Singer</a> (<a href=\"https://plus.google.com/104569492481999771226\">+Adam Singer</a>)</li><li><a href=\"https://github.com/damondouglas\">Damon Douglas</a> (<a href=\"https://plus.google.com/u/0/108940381045821372455/\">+Damon Douglas</a>)</li><li><a href=\"https://github.com/devoncarew\">Devon Carew</a> (<a href=\"https://plus.google.com/104561874283081442379/\">+Devon Carew</a>)</li><li>Martin Charles</li></ul>"}