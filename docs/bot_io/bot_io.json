{"name":"bot_io","qualifiedName":"bot_io/bot_io","comment":"","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"fileSha1Hex":{"name":"fileSha1Hex","qualifiedName":"bot_io/bot_io.fileSha1Hex","comment":"<p>Returns the 40-character hex SHA1 value of the provided file.</p>\n<p>If <a>bot_io/bot_io.fileSha1Hex.file</a> is null or does not exist, errors will occur.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.String","inner":[]}]}],"parameters":{"file":{"name":"file","optional":false,"named":false,"default":false,"type":[{"outer":"dart-io.File","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"fileContentsMatch":{"name":"fileContentsMatch","qualifiedName":"bot_io/bot_io.fileContentsMatch","comment":"<p>Returns a <a>bot_io/dart-async.Future</a> that evaluates to true if the contents of <a>bot_io/bot_io.fileContentsMatch.file1</a> and\n<a>bot_io/bot_io.fileContentsMatch.file2</a> are the same.</p>\n<p>Equality is determined by comparing the result of <a>bot_io/bot_io.fileSha1Hex</a> for each\nfile.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"dart-core.bool","inner":[]}]}],"parameters":{"file1":{"name":"file1","optional":false,"named":false,"default":false,"type":[{"outer":"dart-io.File","inner":[]}],"value":"null","annotations":[]},"file2":{"name":"file2","optional":false,"named":false,"default":false,"type":[{"outer":"dart-io.File","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"enableScriptLogListener":{"name":"enableScriptLogListener","qualifiedName":"bot_io/bot_io.enableScriptLogListener","comment":"<p>When called, a listener is added to the root Logger and all output is\nappended to a log file named \"<code>new Options().script</code>.log\".</p>\n<p>The format: LogRecord.time 'tab' LogRecord.level 'tab' LogRecord.loggerName 'tab' LogRecord.message</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"classes":{"class":[{"name":"TempDir","qualifiedName":"bot_io/bot_io.TempDir"},{"name":"ShellString","qualifiedName":"bot_io/bot_io.ShellString"},{"name":"IoHelpers","qualifiedName":"bot_io/bot_io.IoHelpers"},{"name":"EntityExistsValidator","qualifiedName":"bot_io/bot_io.EntityExistsValidator"},{"name":"EntityValidator","qualifiedName":"bot_io/bot_io.EntityValidator"},{"name":"EntityPopulater","qualifiedName":"bot_io/bot_io.EntityPopulater"},{"name":"ColumnDefinition","qualifiedName":"bot_io/bot_io.ColumnDefinition"},{"name":"Console","qualifiedName":"bot_io/bot_io.Console"},{"name":"AnsiColor","qualifiedName":"bot_io/bot_io.AnsiColor","preview":"<p><a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code#Colors\">More details</a></p>"}],"typedef":{},"error":[{"name":"EntityPopulatorException","qualifiedName":"bot_io/bot_io.EntityPopulatorException"}]},"packageName":"bot_io","packageIntro":"<p>!<a href=\"https://raw.github.com/kevmoo/bot_io.dart/master/resource/logo.png\">BOT!</a></p>\n<h1>bot_io</h1>\n<h2>A collection of helpers related to the file system.</h2>\n<p><a href=\"https://drone.io/github.com/kevmoo/bot_io.dart/latest\">!<a href=\"https://drone.io/github.com/kevmoo/bot_io.dart/status.png\">Build Status</a></a></p>\n<h1>Projects using bot_io</h1><ul><li><a href=\"https://github.com/kevmoo/hop.dart\">Hop: Dark Task Framework</a></li></ul>\n<h1>Versioning</h1><ul><li>We follow <a href=\"http://semver.org/\">Semantic Versioning</a>.</li><li>\n<p>We are not planning a V1 for <strong>bot_io</strong> until Dart releases V1.\n<em> In the mean time, the version will remain <code>0.Y.Z</code>.\n</em> Changes to the <em>minor</em> version - Y - will indicate breaking changes.\n* Changes to the <em>patch</em> version - Z - indicate non-breaking changes.</p></li></ul>\n<h1>Authors</h1><ul><li><a href=\"https://github.com/kevmoo\">Kevin Moore</a> (<a href=\"https://plus.google.com/110066012384188006594/\">+Kevin Moore</a>, <a href=\"http://twitter.com/kevmoo\">@kevmoo</a>)</li><li><em>You? File bugs. Fork and Fix bugs. Send pull requests.</em></li></ul>"}