{"name":"parser","qualifiedName":"html5lib/parser","comment":"<p>This library has a parser for HTML5 documents, that lets you parse HTML\neasily from a script or server side application:</p>\n<pre><code>import 'package:html5lib/parser.dart' show parse;\nimport 'package:html5lib/dom.dart';\nmain() {\n  var document = parse(\n      '&lt;body&gt;Hello world! &lt;a href=\"www.html5rocks.com\"&gt;HTML5 rocks!');\n  print(document.outerHtml);\n}\n</code></pre>\n<p>The resulting document you get back has a DOM-like API for easy tree\ntraversal and manipulation.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"parseFragment":{"name":"parseFragment","qualifiedName":"html5lib/parser.parseFragment","comment":"<p>Parse the <a>html5lib/parser.parseFragment.input</a> html5 document fragment into a tree. The <a>html5lib/parser.parseFragment.input</a> can be\na <a>dart-core.String</a>, <a>dart-core</a>&lt;<a>dart-core</a>> of bytes or an <a>html5lib/tokenizer.HtmlTokenizer</a>. The <a>html5lib/parser.parseFragment.container</a>\nelement can optionally be specified, otherwise it defaults to \"div\".</p>\n<p>If <a>html5lib/parser.parseFragment.input</a> is not a <a>html5lib/tokenizer.HtmlTokenizer</a>, you can optionally specify the file's\n<a>html5lib/parser.parseFragment.encoding</a>, which must be a string. If specified, that encoding will be used,\nregardless of any BOM or later declaration (such as in a meta element).</p>\n<p>Set <a>html5lib/parser.parseFragment.generateSpans</a> if you want to generate <a>html5lib/source_maps-span.Span</a>s, otherwise the\n<a>html5lib/dom.Node.sourceSpan</a> property will be <code>null</code>. When using <a>html5lib/parser.parseFragment.generateSpans</a> you can\nadditionally pass <a>html5lib/parser.parseFragment.sourceUrl</a> to indicate where the <a>html5lib/parser.parseFragment.input</a> was extracted\nfrom.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"html5lib/dom.DocumentFragment","inner":[]}],"parameters":{"input":{"name":"input","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]},"container":{"name":"container","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.String","inner":[]}],"value":"StringConstant(\"div\")","annotations":[]},"encoding":{"name":"encoding","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"generateSpans":{"name":"generateSpans","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"sourceUrl":{"name":"sourceUrl","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"parse":{"name":"parse","qualifiedName":"html5lib/parser.parse","comment":"<p>Parse the <a>html5lib/parser.parse.input</a> html5 document into a tree. The <a>html5lib/parser.parse.input</a> can be\na <a>dart-core.String</a>, <a>dart-core</a>&lt;<a>dart-core</a>> of bytes or an <a>html5lib/tokenizer.HtmlTokenizer</a>.</p>\n<p>If <a>html5lib/parser.parse.input</a> is not a <a>html5lib/tokenizer.HtmlTokenizer</a>, you can optionally specify the file's\n<a>html5lib/parser.parse.encoding</a>, which must be a string. If specified, that encoding will be used,\nregardless of any BOM or later declaration (such as in a meta element).</p>\n<p>Set <a>html5lib/parser.parse.generateSpans</a> if you want to generate <a>html5lib/source_maps-span.Span</a>s, otherwise the\n<a>html5lib/dom.Node.sourceSpan</a> property will be <code>null</code>. When using <a>html5lib/parser.parse.generateSpans</a> you can\nadditionally pass <a>html5lib/parser.parse.sourceUrl</a> to indicate where the <a>html5lib/parser.parse.input</a> was extracted\nfrom.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"html5lib/dom.Document","inner":[]}],"parameters":{"input":{"name":"input","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]},"encoding":{"name":"encoding","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"generateSpans":{"name":"generateSpans","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"sourceUrl":{"name":"sourceUrl","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"AfterAfterFramesetPhase","qualifiedName":"html5lib/parser.AfterAfterFramesetPhase"},{"name":"AfterAfterBodyPhase","qualifiedName":"html5lib/parser.AfterAfterBodyPhase"},{"name":"AfterFramesetPhase","qualifiedName":"html5lib/parser.AfterFramesetPhase"},{"name":"InFramesetPhase","qualifiedName":"html5lib/parser.InFramesetPhase"},{"name":"AfterBodyPhase","qualifiedName":"html5lib/parser.AfterBodyPhase"},{"name":"InForeignContentPhase","qualifiedName":"html5lib/parser.InForeignContentPhase"},{"name":"InSelectInTablePhase","qualifiedName":"html5lib/parser.InSelectInTablePhase"},{"name":"InSelectPhase","qualifiedName":"html5lib/parser.InSelectPhase"},{"name":"InCellPhase","qualifiedName":"html5lib/parser.InCellPhase"},{"name":"InRowPhase","qualifiedName":"html5lib/parser.InRowPhase"},{"name":"InTableBodyPhase","qualifiedName":"html5lib/parser.InTableBodyPhase"},{"name":"InColumnGroupPhase","qualifiedName":"html5lib/parser.InColumnGroupPhase"},{"name":"InCaptionPhase","qualifiedName":"html5lib/parser.InCaptionPhase"},{"name":"InTableTextPhase","qualifiedName":"html5lib/parser.InTableTextPhase"},{"name":"InTablePhase","qualifiedName":"html5lib/parser.InTablePhase"},{"name":"TextPhase","qualifiedName":"html5lib/parser.TextPhase"},{"name":"InBodyPhase","qualifiedName":"html5lib/parser.InBodyPhase"},{"name":"AfterHeadPhase","qualifiedName":"html5lib/parser.AfterHeadPhase"},{"name":"InHeadPhase","qualifiedName":"html5lib/parser.InHeadPhase"},{"name":"BeforeHeadPhase","qualifiedName":"html5lib/parser.BeforeHeadPhase"},{"name":"BeforeHtmlPhase","qualifiedName":"html5lib/parser.BeforeHtmlPhase"},{"name":"InitialPhase","qualifiedName":"html5lib/parser.InitialPhase"},{"name":"Phase","qualifiedName":"html5lib/parser.Phase","preview":"<p>Base class for helper object that implements each phase of processing.</p>"},{"name":"HtmlParser","qualifiedName":"html5lib/parser.HtmlParser","preview":"<p>Parser for HTML, which generates a tree structure from a stream of\n(possibly malformed) characters.</p>"}],"typedef":{"TokenProccessor":{"name":"TokenProccessor","qualifiedName":"html5lib/parser.TokenProccessor","comment":"","return":"token.Token","parameters":{"token":{"name":"token","optional":false,"named":false,"default":false,"type":[{"outer":"html5lib/token.Token","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}}},"error":[{"name":"ParseError","qualifiedName":"html5lib/parser.ParseError","preview":"<p>Error in parsed document.</p>"}]},"packageName":"html5lib","packageIntro":"<h1>html5lib in Pure Dart</h1>\n<p>This is a pure <a href=\"http://www.dartlang.org/\">Dart</a> <a href=\"http://dev.w3.org/html5/spec/parsing.html\">html5 parser</a>. It's a port of\n<a href=\"http://code.google.com/p/html5lib/\">html5lib</a> from Python. Since it's 100%\nDart you can use it safely from a script or server side app.</p>\n<p>Eventually the parse tree API will be compatible with <a href=\"http://api.dartlang.org/docs/continuous/dart_html.html\">dart:html</a>, so\nthe same code will work on the client and the server.</p>\n<h2>Installation</h2>\n<p>Add this to your <code>pubspec.yaml</code> (or create it):</p>\n<pre><code>dependencies:\n  html5lib: any\n</code></pre>\n<p>Then run the <a href=\"http://www.dartlang.org/docs/pub-package-manager/\">Pub Package Manager</a> (comes with the Dart SDK):</p>\n<pre><code>pub install\n</code></pre>\n<h2>Usage</h2>\n<p>Parsing HTML is easy!</p>\n<pre><code>import 'package:html5lib/parser.dart' show parse;\nimport 'package:html5lib/dom.dart';\n\nmain() {\n  var document = parse(\n      '&lt;body&gt;Hello world! &lt;a href=\"www.html5rocks.com\"&gt;HTML5 rocks!');\n  print(document.outerHtml);\n}\n</code></pre>\n<p>You can pass a String or list of bytes to <code>parse</code>.\nThere's also <code>parseFragment</code> for parsing a document fragment, and <code>HtmlParser</code>\nif you want more low level control.</p>\n<h2>Running Tests</h2>\n<pre><code># From Dart SVN checkout\n./tools/build.py -m release\n./tools/test.py -m release html5lib\n./tools/test.py -m release -r drt html5lib\n</code></pre>"}