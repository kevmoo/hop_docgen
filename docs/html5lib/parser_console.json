{"name":"parser_console","qualifiedName":"html5lib/parser_console","comment":"<p>This library adds <code>dart:io</code> support to the HTML5 parser. Call\ninitDartIOSupport before calling the <a>html5lib/parser.parse</a> methods and they will accept\na <a>html5lib/dart-io.RandomAccessFile</a> as input, in addition to the other input types.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"readAllBytesFromFile":{"name":"readAllBytesFromFile","qualifiedName":"html5lib/parser_console.readAllBytesFromFile","comment":"<p>Synchronously reads all bytes from the <a>html5lib/parser_console.readAllBytesFromFile.file</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.int","inner":[]}]}],"parameters":{"file":{"name":"file","optional":false,"named":false,"default":false,"type":[{"outer":"dart-io.RandomAccessFile","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"useConsole":{"name":"useConsole","qualifiedName":"html5lib/parser_console.useConsole","comment":"<p>Adds support to the <a>html5lib/parser.HtmlParser</a> for running on a console VM. In particular\nthis means it will be able to handle <code>dart:io</code> and <a>html5lib/dart-io.RandomAccessFile</a>s as\ninput to the various <a>html5lib/parser.parse</a> methods.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"classes":{"class":[],"typedef":{},"error":[]},"packageName":"html5lib","packageIntro":"<h1>html5lib in Pure Dart</h1>\n<p>This is a pure <a href=\"http://www.dartlang.org/\">Dart</a> <a href=\"http://dev.w3.org/html5/spec/parsing.html\">html5 parser</a>. It's a port of\n<a href=\"http://code.google.com/p/html5lib/\">html5lib</a> from Python. Since it's 100%\nDart you can use it safely from a script or server side app.</p>\n<p>Eventually the parse tree API will be compatible with <a href=\"http://api.dartlang.org/docs/continuous/dart_html.html\">dart:html</a>, so\nthe same code will work on the client and the server.</p>\n<h2>Installation</h2>\n<p>Add this to your <code>pubspec.yaml</code> (or create it):</p>\n<pre><code>dependencies:\n  html5lib: any\n</code></pre>\n<p>Then run the <a href=\"http://www.dartlang.org/docs/pub-package-manager/\">Pub Package Manager</a> (comes with the Dart SDK):</p>\n<pre><code>pub install\n</code></pre>\n<h2>Usage</h2>\n<p>Parsing HTML is easy!</p>\n<pre><code>import 'package:html5lib/parser.dart' show parse;\nimport 'package:html5lib/dom.dart';\n\nmain() {\n  var document = parse(\n      '&lt;body&gt;Hello world! &lt;a href=\"www.html5rocks.com\"&gt;HTML5 rocks!');\n  print(document.outerHtml);\n}\n</code></pre>\n<p>You can pass a String or list of bytes to <code>parse</code>.\nThere's also <code>parseFragment</code> for parsing a document fragment, and <code>HtmlParser</code>\nif you want more low level control.</p>\n<h2>Running Tests</h2>\n<pre><code># From Dart SVN checkout\n./tools/build.py -m release\n./tools/test.py -m release html5lib\n./tools/test.py -m release -r drt html5lib\n</code></pre>"}